// Place your key bindings in this file to override the defaults
[
  // Remove some system (default) key bindings
  { "key": "cmd+\\", "command": "-workbench.action.splitEditor" },
  { "key": "ctrl+g", "command": "-workbench.action.gotoLine" },
  { "key": "ctrl+9", "command": "-workbench.action.openEditorAtIndex9" },

  // For Linux environments, define basic macOS-style key bindings
  { "key": "meta+s", "command": "workbench.action.files.save" }, { "key": "ctrl+s", "command": "-workbench.action.files.save" },
  { "key": "meta+c", "command": "editor.action.clipboardCopyAction" }, { "key": "ctrl+c", "command": "-editor.action.clipboardCopyAction" },
  { "key": "meta+v", "command": "editor.action.clipboardPasteAction" }, { "key": "ctrl+v", "command": "-editor.action.clipboardPasteAction" },
  { "key": "meta+x", "command": "editor.action.clipboardCutAction" }, { "key": "ctrl+x", "command": "-editor.action.clipboardCutAction" },
  { "key": "meta+z", "command": "undo" }, { "key": "ctrl+z", "command": "-undo" },
  { "key": "meta+a", "command": "editor.action.selectAll" }, { "key": "ctrl+a", "command": "-editor.action.selectAll" },
  { "key": "shift+meta+z", "command": "redo" }, { "key": "ctrl+shift+z", "command": "-redo" },
  { "key": "ctrl+b", "command": "-workbench.action.toggleSidebarVisibility" },
  { "key": "meta+l", "command": "expandLineSelection", "when": "textInputFocus" }, { "key": "ctrl+l", "command": "-expandLineSelection", "when": "textInputFocus" },
  { "key": "meta+w", "command": "workbench.action.closeActiveEditor" }, { "key": "ctrl+w", "command": "-workbench.action.closeActiveEditor" },
  { "key": "meta+f", "command": "actions.find", "when": "editorFocus || editorIsOpen" }, { "key": "ctrl+f", "command": "-actions.find", "when": "editorFocus || editorIsOpen" },
  { "key": "meta+p", "command": "workbench.action.quickOpen" }, { "key": "ctrl+p", "command": "-workbench.action.quickOpen" },
  { "key": "meta+j", "command": "workbench.action.togglePanel" }, { "key": "ctrl+j", "command": "-workbench.action.togglePanel" },
  { "key": "meta+b", "command": "workbench.action.toggleSidebarVisibility" },
  { "key": "shift+meta+p", "command": "workbench.action.showCommands" }, { "key": "ctrl+shift+p", "command": "-workbench.action.showCommands" },
  { "key": "shift+meta+e", "command": "workbench.view.explorer", "when": "viewContainer.workbench.view.explorer.enabled" }, { "key": "ctrl+shift+e", "command": "-workbench.view.explorer", "when": "viewContainer.workbench.view.explorer.enabled" },
  { "key": "shift+meta+f", "command": "workbench.action.findInFiles" }, { "key": "ctrl+shift+f", "command": "-workbench.action.findInFiles" },
  { "key": "meta+enter", "command": "editor.action.insertLineAfter", "when": "editorTextFocus && !editorReadonly" }, { "key": "ctrl+enter", "command": "-editor.action.insertLineAfter", "when": "editorTextFocus && !editorReadonly" },
  { "key": "meta+/", "command": "editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" }, { "key": "ctrl+/", "command": "-editor.action.commentLine", "when": "editorTextFocus && !editorReadonly" },

  // tab navigation
  { "key": "cmd+[", "command": "workbench.action.previousEditor" }, { "key": "shift+cmd+[", "command": "-workbench.action.previousEditor" },
  { "key": "cmd+]", "command": "workbench.action.nextEditor" }, { "key": "shift+cmd+]", "command": "-workbench.action.nextEditor" },
  { "key": "ctrl+y up", "command": "workbench.action.focusAboveGroup" }, { "key": "cmd+k cmd+up", "command": "-workbench.action.focusAboveGroup" },
  { "key": "ctrl+y down", "command": "workbench.action.focusBelowGroup" }, { "key": "cmd+k cmd+down", "command": "-workbench.action.focusBelowGroup" },
  { "key": "ctrl+y left", "command": "workbench.action.focusLeftGroup" }, { "key": "cmd+k cmd+left", "command": "-workbench.action.focusLeftGroup" },
  { "key": "ctrl+y right", "command": "workbench.action.focusRightGroup" }, { "key": "cmd+k cmd+right", "command": "-workbench.action.focusRightGroup" },

  // workbench navigation
  { "key": "cmd+e", "command": "workbench.action.focusActiveEditorGroup" },
  { "key": "shift+cmd+d", "command": "workbench.view.scm", "when": "workbench.scm.active" }, { "key": "ctrl+shift+g", "command": "-workbench.view.scm", "when": "workbench.scm.active" },

  // movement
  { "key": "shift+enter", "command": "editor.action.smartSelect.expand", "when": "editorTextFocus" }, { "key": "ctrl+shift+right", "command": "-editor.action.smartSelect.expand", "when": "editorTextFocus" },
  { "key": "shift+backspace", "command": "editor.action.smartSelect.shrink", "when": "editorTextFocus" }, { "key": "ctrl+shift+left", "command": "-editor.action.smartSelect.shrink", "when": "editorTextFocus" },
  { "key": "ctrl+d", "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus" }, { "key": "f12", "command": "-editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus" },
  { "key": "ctrl+t", "command": "editor.action.peekDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" }, { "key": "alt+f12", "command": "-editor.action.peekDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
  { "key": "ctrl+r", "command": "editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" }, { "key": "shift+f12", "command": "-editor.action.goToReferences", "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
  { "key": "ctrl+=", "command": "workbench.action.navigateForward", "when": "canNavigateForward" }, { "key": "ctrl+shift+-", "command": "-workbench.action.navigateForward", "when": "canNavigateForward" },
  { "key": "ctrl+s", "command": "workbench.action.navigateToLastEditLocation" }, { "key": "cmd+k cmd+q", "command": "-workbench.action.navigateToLastEditLocation" },
  { "key": "ctrl+9", "command": "editor.action.jumpToBracket", "when": "editorTextFocus" }, { "key": "shift+cmd+\\", "command": "-editor.action.jumpToBracket", "when": "editorTextFocus" },
  { "key": "ctrl+]", "command": "workbench.action.editor.nextChange", "when": "editorTextFocus && !textCompareEditorActive" }, { "key": "alt+f5", "command": "-workbench.action.editor.nextChange", "when": "editorTextFocus && !textCompareEditorActive" },
  { "key": "cmd+o", "command": "workbench.action.gotoSymbol", "when": "!accessibilityHelpIsShown && !accessibleViewIsShown" }, { "key": "shift+cmd+o", "command": "-workbench.action.gotoSymbol", "when": "!accessibilityHelpIsShown && !accessibleViewIsShown" },

  // editing
  { "key": "ctrl+x", "command": "editor.action.transposeLetters", "when": "textInputFocus && !editorReadonly" }, { "key": "ctrl+t", "command": "-editor.action.transposeLetters", "when": "textInputFocus && !editorReadonly" },
  { "key": "cmd+t", "command": "editor.action.trimTrailingWhitespace", "when": "editorTextFocus && !editorReadonly" }, { "key": "cmd+k cmd+x", "command": "-editor.action.trimTrailingWhitespace", "when": "editorTextFocus && !editorReadonly" },
  { "key": "cmd+\\", "command": "editor.action.triggerSuggest", "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible" }, { "key": "ctrl+space", "command": "-editor.action.triggerSuggest", "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible" },

  // split editors
  { "key": "alt+cmd+h", "command": "workbench.action.moveEditorToLeftGroup" },
  { "key": "alt+cmd+n", "command": "workbench.action.moveEditorToBelowGroup" }
  { "key": "alt+cmd+e", "command": "workbench.action.moveEditorToAboveGroup" },
  { "key": "alt+cmd+i", "command": "workbench.action.moveEditorToRightGroup" }, { "key": "alt+cmd+i", "command": "-workbench.action.toggleDevTools", "when": "isDevelopment" },

  // fold
  { "key": "ctrl+c", "command": "editor.foldAll", "when": "editorTextFocus && foldingEnabled" }, { "key": "cmd+k cmd+0", "command": "-editor.foldAll", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+g", "command": "editor.toggleFoldRecursively", "when": "editorTextFocus && foldingEnabled" }, { "key": "cmd+k shift+cmd+l", "command": "-editor.toggleFoldRecursively", "when": "editorTextFocus && foldingEnabled" },
  { "key": "ctrl+z", "command": "editor.toggleFold", "when": "editorTextFocus && foldingEnabled" }, { "key": "cmd+k cmd+l", "command": "-editor.toggleFold", "when": "editorTextFocus && foldingEnabled" },

  // GitHub Copilot
  { "key": "ctrl+o", "command": "editor.action.inlineSuggest.trigger", "when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible" }, { "key": "alt+\\", "command": "-editor.action.inlineSuggest.trigger", "when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible" },
  { "key": "ctrl+.", "command": "editor.action.inlineSuggest.commit", "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible" }, { "key": "tab", "command": "-editor.action.inlineSuggest.commit", "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible" },
  { "key": "tab", "command": "editor.action.inlineSuggest.acceptNextWord", "when": "inlineSuggestionVisible && !editorReadonly" }, { "key": "cmd+right", "command": "-editor.action.inlineSuggest.acceptNextWord", "when": "inlineSuggestionVisible && !editorReadonly" },
  { "key": "shift+cmd+a", "command": "workbench.panel.chat.view.copilot.focus" }, { "key": "shift+cmd+a", "command": "-notification.acceptPrimaryAction", "when": "notificationFocus || notificationToastsVisible" },

  // others
  { "key": "cmd+g", "command": "git.stageSelectedRanges", "when": "!operationInProgress" }
]
